\section{Datové struktury pro integery}

\subsection{Van Emde-Boas Tree}

Vyhledávací strom, pamatuje si integery z $X@⊂@{0,1,2,…,u-1@}$ a pracuje v $O(\log\log u)$.

$VEBT(u)$:
→•
• Min.
• Max.
• Přihrádky $B_0,…,B_{\sqrt{u}-1}$ uložené také jako $VEBT(\sqrt{u})$.
• shrnující strom $S$ jako $VEBT(\sqrt{u})$ udržující seznam neprázdných přihrádek.
←•

Minimum a maximum není uložené v žádné přihrádce.

Nechť $u=2^{2^k}$ (jinak lze konec vynechat).

\subsubsection{Vložení}

Pokud je tam jeden nebo žádný prvek (min je max a nebo je zcela prázdný), pak jen upravuji minimum a maximum.

Jinak, zkontroluji, jestli nenahrazuji minimum nebo maximum a případně pokračuji s tím, co bylo minimum/maximum.
Pokud je přihrádka, kam strkám, prázdná, vytvořím novou, zapíšu si ji do $S$ a vložím do ní.
V každém případě nakonec vložím do té přihrádky rekurzivně.

\subsubsection{Získání}

Obdobně.

\subsubsection{Následník}

(Vstupem může být i číslo, které tam není, prostě vrátí něco většího.)

→•
• Napřed zkontrolujeme triviální věci.
• $<min -→ $ vrátí minimum.
• $≥max -→$ není tu.
• Zkusím se podívat do příslušné přihrádky, když se to nepovede, pomocí shrnujícího stromu najdu následující neprázdný strom a najdu v něm minimum.
• Pokud nenajdeme následující přihrádku, vrátí lokální maximum.
←•

\subsubsection{Mazání}

Obdobně, křížené přidání a hledání následníka (pro nahrazování minima apod.).

\subsection{Užitečné funkce}

\subsubsection{Zjištění, že $x$ je mocnina $2$}

Porovnám $x$ a $x-1$. Když na tom udělám bitové $\land$, pak dostanu $0$ pro mocninu $2$ (s výjimkou $x=0$).

\subsubsection{Práce s vektory}

Máme nějakou posloupnost vektorů, každý má $b$ bitů a každý má zleva 1 bit zarážku.

→•
• Replikace (dostat nějakou hodnotu do všech hodnot) -- vynásobením $x$ vektorem samých jedniček.
• Součet prvků -- např. $x \bmod 2^{b+1}-1$, nebo vynásobením vektorem se samými jedničkami a použitím správného kusu.
• Vektorové porovnání (jednička vyjde, pokud složka prvního je menší než složka druhého).
Paddingy nastavím v jednom na jedničky, odečtu druhý, zbude nebo nezbude tato jednička (pak stačí jen správně posunout a vy-andit).
• Počet prvků menších než $α$ -- zreplikujeme $α$, vektorově porovnáme a sečteme je.
• Rozbalení $α$ -- vypsat bity každý zvlášť -- replikace $α$, vy-andovat to šikovnou konstantou, porovnáme s nulovým vektorem.
• Zabalení -- opačně -- představíme si, že to má $b-1$ bitové složky a sečteme (problém je jen ten, že tam nejsou zarážky).
←•
